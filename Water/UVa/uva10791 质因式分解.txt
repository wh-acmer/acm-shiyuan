// 质因式分解
/// 两组数据比较恶心，一个是1（输出2，不是0）
/// 另一个是2^31-1,如果用int，直接输出-2^31，呵呵
#include <cstdio>
#include <iostream>
#include <cstring>
#include <algorithm>
#include <cmath>
#define maxn 65536
int vis[maxn];
int prime[6544];
int n_prime=0;
int a[6544];
void Prime()
{
    memset(vis,1,sizeof(vis));
    vis[0]=vis[1]=0;
    for(int i=2;i<maxn;i++)
        if(vis[i])
        {
            prime[++n_prime]=i;
            for(int j=2*i;j<maxn;j+=i)
                vis[j]=0;
        }
    //printf("%d\n",n_prime);
}
long long Pow(long long a,long long b)
{
    long long ans=1;
    while(b)
    {
        if(b&1)
        {
            b--;
            ans*=a;
        }
        else
        {
            b/=2;
            a*=a;
        }
    }
    return ans;
}
int main()
{
    int t=0;
    Prime();
    long long n;
    //printf("%d\n",prime[n_prime]);
    while(scanf("%lld",&n),n)
    {
        printf("Case %d: ",++t);
        if(n==1)
        {
            printf("2\n");
            continue;
        }
        memset(a,0,sizeof(a));
        long long ans=0;
        int cnt=0;
        for(int i=1;i<=n_prime;i++)
        {
            if(n%prime[i]==0)
            {
                cnt++;
                while(n%prime[i]==0)
                {
                    n/=prime[i];
                    a[i]++;
                }
            }
            if(prime[i]>n)
                break;
        }
        for(int i=1;i<=n_prime;i++)
            if(a[i])
            {
                ans+=Pow(prime[i],a[i]);
            }
        if(n>prime[n_prime])
        {
            if(ans==0)
                ans=(n+1);
            else
                ans+=n;
        }
        if(cnt==1)
            ans++;
        printf("%lld\n",ans);
    }
    return 0;
}

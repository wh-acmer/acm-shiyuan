// 先打素数表，质因式分解
// 对于每个素数的幂x，两个数字需满足：
// 两个数字的幂加起来等于x，或者一个等于x,另外一个小于等于x
// 不等的情况有2*x种，相等的只有1种，就是（2*x+1）
// 然后乘法定理，全部累乘

#include <cstdio>
#include <iostream>
#include <algorithm>
#include <cstring>
#include <cmath>
using namespace std;
#define maxn 100001
int vis[100001];
int n_prime;
int prime[maxn];
int cnt[maxn];
long long n;
void set_prime()
{
    n_prime=0;
    memset(vis,1,sizeof(vis));
    vis[0]=vis[1]=0;
    for(int i=2;i<100001;i++)
        if(vis[i])
        {
            prime[++n_prime]=i;
            for(int j=2*i;j<100001;j+=i)
                vis[j]=0;
        }
}
void solve()
{
    memset(cnt,0,sizeof(cnt));
    long long tmp=n;
    for(int i=1;i<=n_prime;i++)
    {
        if(tmp<prime[i])
            break;
        if(tmp%prime[i]==0)
        {
            while(tmp%prime[i]==0)
            {
                tmp/=prime[i];
                cnt[i]++;
            }
        }
    }
    if(tmp>100000)
        cnt[0]++;
    long long ans=1;
    for(int i=0;i<=n_prime;i++)
        if(cnt[i]!=0)
        {
            //printf("%d ... %lld \n",cnt[i],ans);
            ans*=(2*cnt[i]+1);
        }
    printf("%lld\n",ans/2+1);
}
int main()
{
    set_prime();
    while(scanf("%lld",&n)!=EOF,n)
    {
        printf("%lld ",n);
        solve();
    }
    return 0;
}

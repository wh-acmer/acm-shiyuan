//  f(n)=f(n-1)+f(n-3)+f(n-4) ¹¹Ôì¾ØÕó
#include <cstdio>
#include <iostream>
#include <algorithm>
#include <cstring>
using namespace std;
int mod;
struct Matrix
{
    int m[5][5];
};
Matrix B,E,D;
void init()
{
    for(int i=1;i<=4;i++)
        for(int j=1;j<=4;j++)
        {
            B.m[i][j]=0;
            E.m[i][j]=(i==j);
        }
    B.m[1][1]=B.m[1][3]=1;
    B.m[1][4]=B.m[2][1]=1;
    B.m[3][2]=B.m[4][3]=1;
    D.m[1][1]=6;
    D.m[2][1]=4;
    D.m[3][1]=2;
    D.m[4][1]=1;
}
Matrix Multi(Matrix A,Matrix B,int M,int N,int K)
{
    Matrix ans;
    for(int i=1;i<=M;i++)
        for(int j=1;j<=K;j++)
        {
            ans.m[i][j]=0;
            for(int k=1;k<=N;k++)
                ans.m[i][j]=(ans.m[i][j]+A.m[i][k]*B.m[k][j])%mod;
        }
    return ans;
}
Matrix Pow(Matrix A,int k)
{
    Matrix ans=E;
    while(k)
    {
        if(k&1)
        {
            k--;
            ans=Multi(ans,A,4,4,4);
        }
        else
        {
            k/=2;
            A=Multi(A,A,4,4,4);
        }
    }
    return ans;
}
int main()
{
    int n;
    init();
    while(scanf("%d%d",&n,&mod)!=EOF)
    {
        if(n<3)
        {
            printf("%d\n",D.m[4-n][1]%mod);
        }
        else
        {
            n-=3;
            Matrix ans=Pow(B,n);
            ans=Multi(ans,D,4,4,1);
            printf("%d\n",ans.m[1][1]%mod);
        }
    }
    return 0;
}

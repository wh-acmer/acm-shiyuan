#include <cstdio>
#include <iostream>
#include <algorithm>
#include <cstring>
#include <cmath>
using namespace std;
int mod,k;
struct Matrix
{
    int m[11][11];
};
Matrix E,D;
void init()
{
    for(int i=1;i<=10;i++)
        for(int j=1;j<=10;j++)
            E.m[i][j]=(i==j);
    for(int i=1;i<=10;i++)
        D.m[i][1]=10-i;
}
Matrix multi(Matrix A,Matrix B,int M,int N,int K)
{
    Matrix ans;
    for(int i=1;i<=M;i++)
        for(int j=1;j<=K;j++)
        {
            ans.m[i][j]=0;
            for(int p=1;p<=N;p++)
                ans.m[i][j]=(ans.m[i][j]+A.m[i][p]*B.m[p][j])%mod;
        }
    return ans;
}
Matrix Pow(Matrix A,int p)
{
    Matrix ans=E;
    while(p)
    {
        if(p&1)
        {
            p--;
            ans=multi(ans,A,10,10,10);
        }
        else
        {
            p/=2;
            A=multi(A,A,10,10,10);
        }
    }
    return ans;
}
int main()
{
    init();
    Matrix B;
    while(scanf("%d%d",&k,&mod)!=EOF)
    {
        memset(B.m,0,sizeof(B.m));
        for(int i=1;i<=10;i++)
            scanf("%d",&B.m[1][i]);
        for(int i=2;i<=10;i++)
            B.m[i][i-1]=1;
        if(k<=9)
            printf("%d\n",k);
        else
        {
            k-=9;
            Matrix ans=Pow(B,k);
            ans=multi(ans,D,10,10,1);
            printf("%d\n",ans.m[1][1]);
        }
    }
    return 0;
}
